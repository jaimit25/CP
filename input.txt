//Morris inorder Traversal 
// vector<int> inorderTraversal(TreeNode *root)
// {
//     vector<int> ans;

//     TreeNode *curr = root;
//     while (curr != NULL)
//     {

//         if (curr->left == nullptr)
//         {
//             ans.push_back(curr->data);
//             curr = curr->right;
//         }
//         else
//         {
//             // we need inorder predecessor
//             TreeNode *p = curr->left;                    // p : previous node
//             while (p->right != NULL && p->right != curr) // if there exist a right node and it does not point to itself
//             {
//                 p = p->right;
//             }

//             if (p->right == NULL)
//             {
//                 // make thread or link
//                 p->right = curr;
//                 curr = curr->left;
//             }
//             else
//             {
//                 // p node has a link , break link or thread
//                 p->right = NULL;
//                 ans.push_back(curr->data);
//                 curr = curr->right;
//             }
//         }
//     }

//     return ans;
// }